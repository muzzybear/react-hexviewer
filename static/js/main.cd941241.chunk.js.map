{"version":3,"sources":["logo.svg","HexView.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","hexify","x","len","toString","toUpperCase","padStart","HexRow","offset","this","props","index","data","slice","d","Uint8Array","h","Array","from","map","t","String","fromCharCode","join","replace","offsetStr","react_default","a","createElement","className","style","PureComponent","HexView","_this","byteLength","rows","Math","ceil","dist_index_esm","_ref","height","width","index_esm","itemCount","itemSize","itemData","Component","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleDragOver","bind","assertThisInitialized","handleDrop","fetch","logo","then","res","blob","b","setData","_this2","fr","FileReader","onloadend","setState","prev","result","readAsArrayBuffer","e","stopPropagation","preventDefault","dataTransfer","files","length","f","dropEffect","onDrop","onDragOver","src","alt","src_HexView_0","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cd941241.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, PureComponent } from 'react';\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport './HexView.css';\n\nconst hexify = (x,len) => x.toString(16).toUpperCase().padStart(len,\"0\");\n\n\nclass HexRow extends PureComponent {\n  render() {\n    let offset = this.props.index*16;\n\n    let data = this.props.data.slice(offset, offset+16);\n    let d = new Uint8Array(data);\n    let h = Array.from(d).map(x => hexify(x,2));\n    let t = Array.from(d).map(x => String.fromCharCode(x)).join(\"\").replace(/[\\x00-\\x20]/g, \"\\u00a0\");\n    let offsetStr = hexify(offset, 8);\n  \n    return (\n      <div className=\"HexView-row\" style={this.props.style}>\n        <span className=\"HexView-offset\">{offsetStr}</span>\n        <span className=\"HexView-data\">{h.join(\" \")}</span>\n        <span className=\"HexView-text\">{t}</span>\n      </div>\n    );  \n  \n  }\n}\n\nclass HexView extends Component {\n\n  render() {\n    if (!this.props.data) {\n      return (<div></div>);\n    }\n\n    const len = this.props.data.byteLength;\n    const rows = Math.ceil(len/16);\n\n    return (\n      <AutoSizer>\n        {({height, width}) => (\n          <List\n            className=\"HexView\"\n            height={height}\n            itemCount={rows}\n            itemSize={18}\n            width={width}\n            itemData={this.props.data}\n          >\n            {HexRow}\n          </List>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nexport default HexView;\n","import React, { Component } from 'react';\nimport HexView from './HexView';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n    };\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    fetch(logo).then(res => res.blob()).then(b => this.setData(b));\n  }\n\n  setData(data) {\n    let fr = new FileReader();\n    fr.onloadend = () => {\n      this.setState(prev => ({ data: fr.result }));\n    };\n    fr.readAsArrayBuffer(data);\n  }\n\n  handleDrop(e) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.dataTransfer.files.length > 0) {\n      const f = e.dataTransfer.files;\n      this.setData(f[0]);\n    }\n  }\n\n  handleDragOver(e) {    \n    e.stopPropagation();\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"link\";\n  }\n\n  render() {\n    return (\n      <div className=\"App\"\n        onDrop={this.handleDrop}\n        onDragOver={this.handleDragOver}\n        >\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Shitty HexViewer</h2>\n        </div>\n        <div className=\"App-content\">\n          <HexView data={this.state.data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// service worker disabled, no offline cache\n//registerServiceWorker();\n"],"sourceRoot":""}